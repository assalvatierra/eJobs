@model IEnumerable<JobsV1.Models.JobServices>

@{
    ViewBag.Title = "ActiveJobs";
}

<h2>Active Jobs</h2>
@Html.ActionLink("All", "ActiveJobs", new { FilterId = 1 }) |
@Html.ActionLink("Today", "ActiveJobs", new { FilterId = 2 }) |
@Html.ActionLink("Tomorrow", "ActiveJobs", new { FilterId = 3 })

<table class="table">
    <tr>
        <th>Service</th>
        <th>
            Name
        </th>
        <th>
            Start &emsp;&emsp;&emsp;&emsp; &emsp;- &emsp;&emsp;&emsp;&emsp; End
        </th>
        <th>
            Item
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    string s1 = ((DateTime)item.DtStart).ToString("MMM-dd-yyyy (ddd)");
    string s2 = ((DateTime)item.DtEnd).ToString("MMM-dd-yyyy (ddd)");
    string sStyle1 = "";
    if (ViewBag.Current == s1) { sStyle1 = "background-color:lightgray"; }
  
    <tr style="@sStyle1" >
        <td>
            @Html.DisplayFor(modelItem => item.Service.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.JobMain.Description)
            /
            @Html.DisplayFor(modelItem => item.Particulars)
            <br />

            @foreach (var items in item.JobServiceItems)
            {
                <span> - </span>
                <span> ( </span>
                @Html.DisplayFor(modelItem => items.InvItem.ItemCode)
                <span> ) </span>
                @Html.DisplayFor(modelItem => items.InvItem.Description)
            }

        </td>
        <td>
            @s1 - 
            @s2
            <br />
            @{
                var js = item.JobServicePickups.Where(s => s.JobServicesId == item.Id).FirstOrDefault();
                try
                {
                    if (js.JsDate != null)
                    {

                        string s3 = ((DateTime)js.JsDate).ToString("MMM-dd (ddd)");
                        <span>DateTime:</span>
                        <span style="font-weight:bold;">
                            @s3

                            @js.JsTime
                        </span>
                    }

                    <span>&nbsp;</span>
                    if (js.JsLocation != null)
                    {
                        <span>Location: </span>
                        <span style="font-weight:bold;">
                        @Html.DisplayFor(modelItem => js.JsLocation)
                        </span>
                    }
                }
                catch (Exception e)
                {

                }
            }

        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SupplierItem.Description)
        </td>
        <td>
            @Html.ActionLink("Details", "JobServices", "JobOrder", new { JobMainId = item.JobMainId }, null)
            @Html.ActionLink("Close", "CloseJobActive", new { id = item.JobMainId })
        </td>
    </tr>
  }

</table>


<p>

    @Html.ActionLink("Home", "Index", "Home", null, null) |
    @Html.ActionLink("Work in Progress", "Index", "JobOrder", new { sortid = 1 }, null) |
    Quick List 

</p>
