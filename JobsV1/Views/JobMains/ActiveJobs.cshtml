@model IEnumerable<JobsV1.Models.JobServices>

@{
    ViewBag.Title = "ActiveJobs";
}

<h2>Active Jobs</h2>
<div class="col-lg-12">
    @Html.ActionLink("All", "ActiveJobs", new { FilterId = 1 }) |
    @Html.ActionLink("Today", "ActiveJobs", new { FilterId = 2 }) |
    @Html.ActionLink("Tomorrow", "ActiveJobs", new { FilterId = 3 }) |
    @Html.ActionLink("After 2 Days", "ActiveJobs", new { FilterId = 4 })
</div><br />
<div class="col-lg-12" style="margin-bottom:10px;">
    <!-- service Search Filter -->
    <h5 class="pull-left">Service :&nbsp; </h5>
    <select class="dropdown col-sm-1" id="service-input" style="font-size:15px;padding:8px;width:120px;">
        <option value="all">All</option>
        <option value="Car">Car Rental</option>
        <option value="Tour">Tour Package</option>
    </select> &nbsp;
    <button class="btn btn-primary" onclick="ActiveJobsUpdate();" >
        <span class="glyphicon glyphicon-search"></span> Filter
    </button>

</div>
<table class="table">
    <tr>
        <th>Service</th>
        <th>
            Name
        </th>
        <th>
            Start &emsp;&emsp;&emsp;&emsp; &emsp;- &emsp;&emsp;&emsp;&emsp; End
        </th>
        <th>
            Item
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        string s1 = ((DateTime)item.DtStart).ToString("MMM-dd-yyyy (ddd)");
        string s2 = ((DateTime)item.DtEnd).ToString("MMM-dd-yyyy (ddd)");
        string sStyle1 = "";
        if (ViewBag.Current == s1) { sStyle1 = "background-color:lightgray"; }
  
        <tr style="@sStyle1" >
            <td>
                @Html.DisplayFor(modelItem => item.Service.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobMain.Description)
                /
                @Html.DisplayFor(modelItem => item.Particulars)
                <br />

                @foreach (var items in item.JobServiceItems)
                {
                    <span> - </span>
                    <span> ( </span>
                    @Html.DisplayFor(modelItem => items.InvItem.ItemCode)
                    <span> ) </span>
                    @Html.DisplayFor(modelItem => items.InvItem.Description)
                }

            </td>
            <td>
                @s1 - 
                @s2
                <br />
                @{
                    var js = item.JobServicePickups.Where(s => s.JobServicesId == item.Id).FirstOrDefault();
                    try
                    {
                        if (js.JsDate != null)
                        {

                            string s3 = ((DateTime)js.JsDate).ToString("MMM-dd (ddd)");
                            <span>DateTime:</span>
                            <span style="font-weight:bold;">
                                @s3

                                @js.JsTime
                            </span>
                        }

                        <span>&nbsp;</span>
                        if (js.JsLocation != null)
                        {
                            <span>Location: </span>
                            <span style="font-weight:bold;">
                            @Html.DisplayFor(modelItem => js.JsLocation)
                            </span>
                        }
                    }
                    catch (Exception e)
                    {

                    }
                }

            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SupplierItem.Description)
            </td>
            <td>
                @Html.ActionLink("Details", "JobServices", "JobOrder", new { JobMainId = item.JobMainId }, null) |
                @Html.ActionLink("Close", "CloseJobActive", new { id = item.JobMainId })
            </td>
        </tr>
      }

</table>

<p>

    @Html.ActionLink("Home", "Index", "Home", null, null) |
    @Html.ActionLink("Work in Progress", "Index", "JobOrder", new { sortid = 1 }, null) |
    Quick List 

</p>

<script src="~/Scripts/jquery-1.12.4.min.js"> </script>
<script>

    function Update() {
        var url_string = window.location.href;
        var url = new URL(url_string);
        var service = url.searchParams.get("service");
        $('#service-input').val(service);
    }


    $(function () {
        Update();
    });

    function getToday(){

        var today = new Date();
        var dd = today.getDate();
        var mm = today.getMonth()+1; //January is 0!
        var yyyy = today.getFullYear();

        if(dd<10) {
            dd = '0'+dd
        }

        if(mm<10) {
            mm = '0'+mm
        }

        today = yyyy + '-' + mm + '-' + dd;
        return today;
    }

    function ActiveJobsUpdate() {
        var url_string = window.location.href;
        var url = new URL(url_string);
        var filterid = url.searchParams.get("FilterId");

        var serviceVal = document.getElementById("service-input").value;

        var requestString = "/JobMains/ActiveJobs?";

        requestString += "FilterId=" + filterid + "&";

        if (serviceVal != null) {

            requestString = requestString + "&service=" + serviceVal;
        }


        window.location.href = requestString;
        //window.location.href = "/Reporting/Index/" + idVal + "&sDate=" + sDateVal + "&sDate=" + eDateVal;
    }

</script>
