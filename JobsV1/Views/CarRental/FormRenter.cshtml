@model JobsV1.Models.CarReservation


<div class="modal-content">
    <div class="modal-header">
        <h3 class="modal-title">Car Reservation </h3>
        <a href="#" onclick="backtoMain()"> back to main </a>
    </div>

    @Html.Action("CarReserve")

    <div class="modal-footer" id="rsv-footer" style="display:block;">
        <div class="pull-left">
            <h5 id="modal-text-foot">-</h5>
        </div>

        <div class="pull-right">
            <button type="button" class="btn btn-default" id="ReservePrev" onclick="backtoPrev()">Previous</button>
            <button type="button" class="btn btn-default" id="ReserveProceed" onclick="showForm()">Proceed</button>
            @Html.ActionLink("Cancel", "Index", "CarRental", null , new { @class = "btn btn-default" })

        </div>
    </div>
</div>


<div class="modal-body row" id="formRenter" style="display:none;padding:0px;">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal col-md-12">
            <h3>Usage Details</h3>
            <p>Fields with * are required.</p>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" style="display:none">
                <label class="control-label col-md-2"> Trans.Date* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DtTrx, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DtTrx, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none">
                <label class="control-label col-md-2"> Vehicle* </label>
                <div class="col-md-10">
                    @Html.DropDownList("CarUnitId", null, htmlAttributes: new { @class = "form-control", @id = "rnt-carUnit" })
                    @Html.ValidationMessageFor(model => model.CarUnitId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Start Date* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DtStart, new { htmlAttributes = new { @class = "form-control", @id = "rnt-startdate" } })
                    @Html.ValidationMessageFor(model => model.DtStart, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LocStart, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LocStart, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LocStart, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Date End* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DtEnd, new { htmlAttributes = new { @class = "form-control", @id = "rnt-startdate" } })
                    @Html.ValidationMessageFor(model => model.DtEnd, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LocEnd, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LocEnd, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LocEnd, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none">
                <label class="control-label col-md-2"> Base Rate* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BaseRate, new { htmlAttributes = new { @class = "form-control", @id = "rnt-baseRate" } })
                    @Html.ValidationMessageFor(model => model.BaseRate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none">
                <label class="control-label col-md-2"> Destination* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Destinations, new { htmlAttributes = new { @class = "form-control", @id = "rnt-destination" } })
                    @Html.ValidationMessageFor(model => model.Destinations, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none">
                <label class="control-label col-md-2"> Used for* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UseFor, new { htmlAttributes = new { @class = "form-control", @id = "rnt-usedfor" } })
                    @Html.ValidationMessageFor(model => model.UseFor, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.EstHrPerDay, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EstHrPerDay, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EstHrPerDay, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EstKmTravel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EstKmTravel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EstKmTravel, "", new { @class = "text-danger" })
                </div>
            </div>

            <h3>Renter Details</h3>
            <p>Fields with * are required.
                <label style="color:orangered;display:block" id="dtls-warning"></label>
            </p>
            <hr />
            <div class="form-group" oninput="checkRenterDetails()">
                <label class="control-label col-md-2"> </label>
                <div class="col-md-10">
                </div>
            </div>

            <div class="form-group"  oninput="checkRenterDetails()" >
                <label class="control-label col-md-2"> Name* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterName, new { htmlAttributes = new { @class = "form-control" , @id = "rnt-name" } })
                    @Html.ValidationMessageFor(model => model.RenterName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Company </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterCompany, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RenterCompany, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" oninput="checkRenterDetails()" >
                <label class="control-label col-md-2"> Email* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterEmail, new { htmlAttributes = new { @class = "form-control", @id = "rnt-email" } })
                    @Html.ValidationMessageFor(model => model.RenterEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" oninput="checkRenterDetails()" onemptied="checkRenterDetails()" >
                <label class="control-label col-md-2"> Mobile* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterMobile, new { htmlAttributes = new { @class = "form-control", @id = "rnt-mobile" } })
                    @Html.ValidationMessageFor(model => model.RenterMobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Address </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RenterAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Facebook </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterFbAccnt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RenterFbAccnt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Linkedln </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterLinkedInAccnt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RenterLinkedInAccnt, "", new { @class = "text-danger" })
                </div>
            </div>

            <!--
            Hidden
            -->
            <div style="display:none;">
                <input type="text" name="packageid" id="dtls-packageId" value="1" />
                <input type="text" name="mealAcc" id="dtls-mealsAcc" value="1" />
                <input type="text" name="fuel" id="dtls-fuel" value="1" />
            </div>
            <br />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10"  >
                    <input type="submit" value="Submit" class="btn btn-default disabled" id="submit-btn" />
                </div>
            </div>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/Job/FormRenter.js"></script>
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script type="text/javascript"  src="~/Scripts/CarRental/Reservation_wDriver.js"></script>

}


<script>

    //initial
    $('#@(ViewBag.id)').attr('checked', true);

    reservationNum =  @(ViewBag.RsvId);

    function displayPackages(){
        var ratePackageCount = 1;
        var carRateAdditional = 0;
        var mealFlag = 0;
        var fuelFlag = 0;
        RentalType = $('input:radio[name=options]:checked').val();
        @foreach (var package in ViewBag.Packages as IEnumerable<JobsV1.Models.CarRatePackage>)
        {
            <text>
            var carRate_longhaulrate = 0;
            var carRate_fuel = 0;
            </text>
            //carRatesPackages
            foreach (var carRatesPackages in ViewBag.carRatesPackages as IEnumerable<JobsV1.Models.CarRateUnitPackage>)
            {

                if (@carRatesPackages.CarRatePackageId == @package.Id)
                {
                    <text>
                    if(@(carRatesPackages.CarUnitId) == selectedCar )
                    {
                        ratePackageCount += 1;
                        carRate_longhaulrate = @carRatesPackages.FuelLonghaul;
                        carRate_fuel =  @carRatesPackages.FuelDaily;
                        carRateAdditional = 0;

                        //fuel
                        if ($('#rsv-fuel').val() == '0') {
                            $('#pkg-fuel@(package.Id)').text('by renter');
                            carRate_longhaulrate = 0;
                            fuelFlag = 0;
                        } else {
                            $('#pkg-fuel@(package.Id)').text('Included : f:'  + carRate_fuel +' lh:' + carRate_longhaulrate + ' a:' + carRateAdditional);
                            fuelFlag = 1;
                        }
                    }
                    </text>
                }

            }
            <text>
            $('#pkg-days@(package.Id)').text($('#rsv-days').val());

            //meals and accomodation
            if ($('#rsv-meal').val() == '0') {
                $('#pkg-meal@(package.Id)').text('by renter ')
                mealFlag = 0;
            } else {
                if($('#rsv-days').val() == 1){
                    $('#pkg-meal@(package.Id)').text('Included - m:' + @package.DailyMeals)
                }else{
                    $('#pkg-meal@(package.Id)').text('Included - ( m:' + @package.DailyMeals +' + r:' + @package.DailyRoom +' per day ) + m:' + @package.DailyMeals)
                }
                mealFlag = 1;
            }
            </text>

            //rate
            foreach (var rates in ViewBag.CarRates as IEnumerable<JobsV1.Models.CarRate>)
            {
                <text>


                var rate = 0;
                var rateText = 0;
                //check if weekly, monthly or daily
                var days =  $('#rsv-days').val();
                if(days > 21){
                    rate = @rates.Monthly;
                    rate = rate * days;
                    rateText = '(@rates.Monthly / day) '+ rate +'';
                }

                if(days > 6 ){
                    if(22 > days){
                        rate = @rates.Weekly;
                        rate = rate * days;
                        rateText = '(@rates.Weekly / day) '+ rate +'';
                    }
                }

                if(6 > days){
                    rate = @rates.Daily;
                    rate = rate * days;
                    rateText = '(@rates.Daily / day ) = '+ rate +' ';
                }

                var rentalType;
                if(RentalType == "With Driver" ){
                    rentalType = 1;
                }else{
                    rentalType = 0
                }
                
                var days =  $('#rsv-days').val();
                var adjDays = (days-1);

                //Fuel
                var fuelRate = (Fuel * carRate_fuel * days ) + carRate_longhaulrate;
                fuelRate *= fuelFlag;

                //MealsAcc
                var mealsperDay = (@package.DailyMeals +  @package.DailyRoom) * (adjDays);
                var mealsRate = ((mealsperDay)  + @package.DailyMeals ) * rentalType;
                mealsRate *= mealFlag;

               // alert('mealsRate = mf:' + (adjDays) +' + mpd:'+ mealsperDay)
                //total rate
                var totalRate =rate + fuelRate + mealsRate + carRateAdditional;

                if(selectedCar == '@rates.CarUnitId' ){

                    $('#pkg-rate@(package.Id)').text('r:' + rateText   +' + m:'+ mealsRate +' + f:'+ fuelRate  +' = T:'+ totalRate);

                }
        </text>

            }
        }

        $("#table-packages > tbody > tr").hide().slice(0, ratePackageCount).show();
    }

    function displaySummary() {

        var carRate_longhaulrate = 0;
        var carRate_fuel = 0;
        var carRateAdditional = 0;
        var meal = 0;
        var driveracc = 0;
        var rate= 0;
        var mealFlag = 0;
        var fuelFlag = 0;

        RentalType = $('input:radio[name=options]:checked').val();
        selectedCar = $('input:radio[name=cars]:checked').attr("id");
        NoDays = $('#rsv-days').val();
        MealsAcc = $('#rsv-meal').val();
        Fuel = $('#rsv-fuel').val();

        //display days
        $('#smry-rdays').text(NoDays);

        //display days
        $('#smry-rType').text(RentalType);


        @foreach (var package in ViewBag.Packages as IEnumerable<JobsV1.Models.CarRatePackage>)
        {
            //carRatesPackages
            foreach (var carRatesPackages in ViewBag.carRatesPackages as IEnumerable<JobsV1.Models.CarRateUnitPackage>)
            {
                <text>
                if (@carRatesPackages.CarRatePackageId == selectedTour)
                {
                    if(@(carRatesPackages.CarUnitId) == selectedCar )
                    {
                        carRate_longhaulrate = @carRatesPackages.FuelLonghaul;
                        carRate_fuel =  @carRatesPackages.FuelDaily;
                        carRateAdditional =0;
                        //fuel
                        if ($('#rsv-fuel').val() == '0') {
                            carRate_longhaulrate = 0;
                            fuelFlag = 0;
                            $('#smry-rFuel').text('by renter');
                        } else {
                            fuelFlag = 1;
                            $('#smry-rFuel').text('Included : f:' + carRate_fuel + ' + lh:' + carRate_longhaulrate);
                        }
                    }
                }
                </text>
            }

            <text>
            if(@package.Id == selectedTour){ // get id of the tour
                $('#smry-rtour').text('@package.Description');
                $('#rnt-destination').val('@package.Description'); //for reservation details
                $('#rnt-usedfor').val('@package.Description'); //for reservation details
                meal = @package.DailyMeals;
                driveracc = @package.DailyRoom;

            }
            
            //meals and accomodation
            if ($('#rsv-meal').val() == '0') {
                $('#smry-rMeal').text('by renter ');
                mealFlag = 0;
            } else {

                if($('#rsv-days').val() == 1){
                    $('#smry-rMeal').text('Included - m:' + meal)
                }else{
                    $('#smry-rMeal').text('Included - ( m:' + meal +' + r:' + driveracc + ' per day ) + m:' + meal)
                }
                mealFlag = 1;
            }
            </text>

            //get car rate
            foreach (var carlist in ViewBag.CarUnitList as IEnumerable<JobsV1.Models.CarUnit>)
            {

            <text>
            if(@carlist.Id == selectedCar){ // get id of the car
                $('#smry-rVehicle').text('@carlist.Description');
                $('#rnt-carUnit').val(selectedCar);  // (id) for reservation details
            }
            </text>
            }

            //rate
            foreach (var rates in ViewBag.CarRates as IEnumerable<JobsV1.Models.CarRate>)
            {

                <text>
                var rate;
                if(@rates.CarUnitId == selectedCar){ // get id of the car
                    $('#smry-rVehicleRate').text('@rates.Daily');
          
                    //check if weekly, monthly or daily
                    var days =  $('#rsv-days').val();
                    if(days > 21){
                        rate = @rates.Monthly;
                        rate = rate * days;
                        $('#smry-rVehicleRate').text('(@rates.Monthly  per day ) * '+ days +'  ='+ rate +'');
                    }

                    if(days > 6 ){
                        if(22 > days){
                            rate = @rates.Weekly;
                            rate = rate * days;
                            $('#smry-rVehicleRate').text('(@rates.Weekly per day )  * '+ days +'  ='+ rate +'');
                        }
                    }

                    if(6 > days){
                        rate = @rates.Daily;
                        rate = rate * days;
                        $('#smry-rVehicleRate').text('(@rates.Daily  per day )  * '+ days +'  ='+ rate +'');
                    }
                }

                if(@package.Id == selectedTour){ // get id of the tour
                    
                    var rentalType ;
                    if(RentalType == "With Driver" ){
                        rentalType = 1;
                      //  alert("driver");
                    }else{
                        rentalType = 0
                    }

                    var adjDays = (days-1);

                    //Fuel
                    var fuelRate = (Fuel * carRate_fuel * days) + carRate_longhaulrate;
                    fuelRate *= fuelFlag;

                    //MealsAcc
                    var mealsperDay = ( meal +  driveracc ) * (adjDays);
                    // var mealsRate = (mealsperDay * rentalType)  + (meal * rentalType);

                    var mealsRate = (mealsperDay + meal)  * (rentalType);
                    
                    mealsRate *= mealFlag;
                    //total rate
                    var totalRate =rate + fuelRate + mealsRate  + carRateAdditional;

                    $('#rnt-baseRate').val(totalRate);
                    if(selectedCar == '@rates.CarUnitId' ){
                        $('#smry-rtotal').text('r:' + rate  +' + m:'+ mealsRate +' + f:'+ fuelRate +' = '+  totalRate );
               
                    }
                }

                </text>
            }//end foreach rates

        }//end foreach packages

    }//end foreach function


    function clearTable(){
        alert('clear table');

        var new_tbody = document.createElement('table-packages');
        populate_with_new_rows(new_tbody);
        old_tbody.parentNode.replaceChild(new_tbody, old_tbody)
    }


    function rentalTypeChange() {
        $('#btn-rentalUnit > #car3 > #3').attr('checked', true);
        radiobtn = document.getElementById("3");
        radiobtn.checked = true;
        alert(3);
    }
</script>

