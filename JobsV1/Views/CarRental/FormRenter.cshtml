@model JobsV1.Models.CarReservation


<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h3 class="modal-title">Car Reservation </h3>
        <a href="#" onclick="backtoMain()"> back to main </a>
    </div>

    @Html.Action("CarReserve")

    <div class="modal-footer" id="rsv-footer" style="display:block;">
        <div class="pull-left">
            <h5 id="modal-text-foot">-</h5>
        </div>

        <div class="pull-right">
            <button type="button" class="btn btn-default" id="ReservePrev" onclick="backtoPrev()">Previous</button>
            <button type="button" class="btn btn-default" id="ReserveProceed" onclick="showForm()">Proceed</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        </div>
    </div>
</div>


<div class="modal-body row" id="formRenter" style="display:none;padding:0px;">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal col-md-12">
            <h3>Usage Details</h3>
            <p>Fields with * are required.</p>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group" style="display:none">
                <label class="control-label col-md-2"> Trans.Date* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DtTrx, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DtTrx, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none">
                <label class="control-label col-md-2"> Vehicle* </label>
                <div class="col-md-10">
                    @Html.DropDownList("CarUnitId", null, htmlAttributes: new { @class = "form-control", @id = "rnt-carUnit" })
                    @Html.ValidationMessageFor(model => model.CarUnitId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Start Date* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DtStart, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DtStart, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LocStart, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LocStart, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LocStart, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Date End* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DtEnd, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DtEnd, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LocEnd, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LocEnd, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LocEnd, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none">
                <label class="control-label col-md-2"> Base Rate* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BaseRate, new { htmlAttributes = new { @class = "form-control", @id = "rnt-baseRate" } })
                    @Html.ValidationMessageFor(model => model.BaseRate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none">
                <label class="control-label col-md-2"> Destination* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Destinations, new { htmlAttributes = new { @class = "form-control", @id = "rnt-destination" } })
                    @Html.ValidationMessageFor(model => model.Destinations, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" style="display:none">
                <label class="control-label col-md-2"> Used for* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.UseFor, new { htmlAttributes = new { @class = "form-control", @id = "rnt-usedfor" } })
                    @Html.ValidationMessageFor(model => model.UseFor, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.EstHrPerDay, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EstHrPerDay, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EstHrPerDay, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EstKmTravel, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EstKmTravel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EstKmTravel, "", new { @class = "text-danger" })
                </div>
            </div>

            <h3>Renter Details</h3>
            <hr />
            <div class="form-group">
                <label class="control-label col-md-2"> Name* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RenterName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Company </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterCompany, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RenterCompany, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Email* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterEmail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RenterEmail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Mobile* </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterMobile, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RenterMobile, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Address </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RenterAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Facebook </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterFbAccnt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RenterFbAccnt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-md-2"> Linkedln </label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RenterLinkedInAccnt, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RenterLinkedInAccnt, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Submit" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/Job/FormRenter.js"></script>
}


<script src="~/Scripts/jquery-3.3.1.js"></script>

<script>
    //globals
    var currentForm = "Modal";
    var selectedCar = "";
    var RentalType = "With Driver";
    var NoDays = 0;
    var MealsAcc = 0;
    var Fuel = 0;
    var selectedTour = 0;

    //initial-default
    $('#withdriver').attr('checked', true);
    $('#' +@(ViewBag.id)).attr('checked', true);
    $('#car' + $('input:radio[name=cars]:checked').attr("id")).css('border', '2px solid dodgerblue');
    $('#modal-text-foot').text($('input:radio[name=options]:checked').val() + ' - ' + $('input:radio[name=cars]:checked').val());
    $('#pkg-1').attr('checked', true);
    $('#pkg-1').addClass('active').siblings().removeClass('active');
    selectedTour =  $('#pkg-1').attr('id');

    $('#btn-rentalType').click(function () {
        $('#modal-text-foot').text($('input:radio[name=options]:checked').val() + ' - ' + $('input:radio[name=cars]:checked').val());

        if ($('input:radio[name=options]:checked').val() == "Self Drive") {
            $('.isSelfDrive1').hide();
        } else {
            $('.isSelfDrive1').show();
        }
    });

    $('#btn-rentalUnit').click(function () {
        $('#modal-text-foot').text($('input:radio[name=options]:checked').val() + ' - ' + $('input:radio[name=cars]:checked').val());

        $('#car1').css('border', '1px solid lightgray');
        $('#car2').css('border', '1px solid lightgray');
        $('#car3').css('border', '1px solid lightgray');
        $('#car4').css('border', '1px solid lightgray');
        $('#car5').css('border', '1px solid lightgray');
        $('#car6').css('border', '1px solid lightgray');

        $('#car' + $('input:radio[name=cars]:checked').attr("id")).css('border', '2px solid dodgerblue');

    });

    function showForm() {

        RentalType = $('input:radio[name=options]:checked').val();
        selectedCar = $('input:radio[name=cars]:checked').attr("id");
        NoDays = $('#rsv-days').val();
        MealsAcc = $('#rsv-meal').val();
        Fuel = $('#rsv-fuel').val();
        
        //self drive
        if ($('input:radio[name=options]:checked').val() == "Self Drive") {
            selfDrive($('input:radio[name=cars]:checked').attr("id"));
        }

        switch (currentForm) {
            case "Modal": //next FormReservation
                currentForm = "FormReserve";
                $('#modal2-content').css('display', 'none');
                $('#formReserve').css('display', 'block');
                $('#formPackages').css('display', 'none');
                $('#formSummary').css('display', 'none');
                $('#formRenter').css('display', 'none');
                $('#formFinish').css('display', 'none');
                $('#rsv-footer').css('display','block');
                break;
            case "FormReserve": //next FormPackages
                currentForm = "FormPackages";
                $('#modal2-content').css('display', 'none');
                $('#formReserve').css('display', 'none');
                $('#formPackages').css('display', 'block');
                $('#formSummary').css('display', 'none');
                $('#formRenter').css('display', 'none');
                $('#formFinish').css('display', 'none');
                $('#rsv-footer').css('display','block');
                displayPackages();
                break;
            case "FormPackages": //next formSummary
                currentForm = "formSummary";
                $('#modal2-content').css('display', 'none');
                $('#formPackages').css('display', 'none');
                $('#formReserve').css('display', 'none');
                $('#formSummary').css('display', 'block');
                $('#formRenter').css('display', 'none');
                $('#formFinish').css('display', 'none');
                $('#rsv-footer').css('display','block');
                displaySummary();
                break;
            case "formSummary":  //next formRenter
                currentForm = "formRenter";
                $('#modal2-content').css('display', 'none');
                $('#formPackages').css('display', 'none');
                $('#formReserve').css('display', 'none');
                $('#formSummary').css('display', 'none');
                $('#formRenter').css('display', 'block');
                $('#formFinish').css('display', 'none');
                $('#rsv-footer').css('display','none');
                break;
            case "formRenter":  //next formThankyou
                currentForm = "formThankyou";
                $('#modal2-content').css('display', 'none');
                $('#formPackages').css('display', 'none');
                $('#formReserve').css('display', 'none');
                $('#formSummary').css('display', 'none');
                $('#formRenter').css('display', 'none');
                $('#formFinish').css('display', 'block');
                $('#rsv-footer').css('display','none');
                break;
        }

        $('#FormPackages_carid').val($('input:radio[name=cars]:checked').attr("id"));
    }

    function backtoMain() {
        currentForm = "Modal";
        $('#modal2-content').css('display', 'block');
        $('#formReserve').css('display', 'none');
        $('#formPackages').css('display', 'none');
        $('#formSummary').css('display', 'none');
        $('#formRenter').css('display', 'none');
        $('#formFinish').css('display', 'none');
        $('#rsv-footer').css('display','block');

    }

    function backtoPrev() {

        switch (currentForm) {
            case "Modal": //prev none
                currentForm = "Modal";
                $('#modal2-content').css('display', 'block');
                $('#formReserve').css('display', 'none');
                $('#formPackages').css('display', 'none');
                $('#formSummary').css('display', 'none');
                $('#formRenter').css('display', 'none');
                break;
            case "FormReserve": //prev Modal
                currentForm = "Modal";
                $('#modal2-content').css('display', 'block');
                $('#formReserve').css('display', 'none');
                $('#formPackages').css('display', 'none');
                $('#formSummary').css('display', 'none');
                $('#formRenter').css('display', 'none');
                break;
            case "FormPackages":  //next form summary
                currentForm = "FormReserve";
                $('#modal2-content').css('display', 'none');
                $('#formReserve').css('display', 'block');
                $('#formPackages').css('display', 'none');
                $('#formSummary').css('display', 'none');
                $('#formRenter').css('display', 'none');
                break;
            case "formSummary":  //next back to main
                currentForm = "FormPackages";
                $('#modal2-content').css('display', 'none');
                $('#formReserve').css('display', 'none');
                $('#formPackages').css('display', 'block');
                $('#formSummary').css('display', 'none');
                $('#formRenter').css('display', 'none');
                break;
            case "formRenter":  //next summary
                currentForm = "formSummary";
                $('#modal2-content').css('display', 'none');
                $('#formPackages').css('display', 'none');
                $('#formReserve').css('display', 'none');
                $('#formSummary').css('display', 'block');
                $('#formRenter').css('display', 'none');
                sleep(5000);
                break;
        }
    }

    function displayPackages() {
        @foreach (var package in ViewBag.Packages as IEnumerable<JobsV1.Models.CarRatePackage>)
        {
            var carRate_longhaulrate = 0;
            var carRate_fuel = 0;
            //carRatesPackages
            foreach (var carRatesPackages in ViewBag.carRatesPackages as IEnumerable<JobsV1.Models.CarRateUnitPackage>)
            {

                if (@carRatesPackages.CarRatePackageId == @package.Id)
                {
                <text>
                if(@(carRatesPackages.CarUnitId) == selectedCar )
                {
                        carRate_longhaulrate = @carRatesPackages.FuelLonghaul;
                        carRate_fuel =  @carRatesPackages.FuelDaily;


                        //fuel
                        if ($('#rsv-fuel').val() == '0') {
                            $('#pkg-fuel@(package.Id)').text('by renter');
                            carRate_longhaulrate = 0;
                        } else {
                            $('#pkg-fuel@(package.Id)').text('Included : f:'  + carRate_fuel +' lh:' + carRate_longhaulrate);
                        }

                    }
                </text>
                }
            }


             <text>
            $('#pkg-days@(package.Id)').text($('#rsv-days').val());

            //meals and accomodation
            if ($('#rsv-meal').val() == '0') {
                $('#pkg-meal@(package.Id)').text('by renter ')
            } else {

                $('#pkg-meal@(package.Id)').text('Included - ' + @package.DailyMeals +' + ' + @package.DailyRoom)
            }

            </text>

            //rate
            foreach (var rates in ViewBag.CarRates as IEnumerable<JobsV1.Models.CarRate>)
            {
            <text>
            var rentalType;
            if(RentalType == "With Driver" ){
                rentalType = 1;
            }else{
                rentalType = 0
            }

            var days =  $('#rsv-days').val();

            var rate = @rates.Daily * days;

            //Fuel
            var fuelRate = (Fuel * carRate_fuel * days ) + carRate_longhaulrate;

            //MealsAcc
            var mealsperDay = @package.DailyMeals +  @package.DailyRoom;
            var mealsRate = (MealsAcc * mealsperDay ) * (days - 1) * rentalType;

            //total rate
            var totalRate =rate + fuelRate + mealsRate;

            if(selectedCar == '@rates.CarUnitId' ){
                $('#pkg-rate@(package.Id)').text('r:' + rate  +' + m:'+ mealsRate +' + f:'+ fuelRate  +' T:'+ totalRate);
            }
            </text>
        }


        }
    }

    function displaySummary() {

        var carRate_longhaulrate = 0;
        var carRate_fuel = 0;
        RentalType = $('input:radio[name=options]:checked').val();
        selectedCar = $('input:radio[name=cars]:checked').attr("id");
        NoDays = $('#rsv-days').val();
        MealsAcc = $('#rsv-meal').val();
        Fuel = $('#rsv-fuel').val();

        //display days
        $('#smry-rdays').text(NoDays);

        //display days
        $('#smry-rType').text(RentalType);

        @foreach (var package in ViewBag.Packages as IEnumerable<JobsV1.Models.CarRatePackage>)
        {

            //carRatesPackages
            foreach (var carRatesPackages in ViewBag.carRatesPackages as IEnumerable<JobsV1.Models.CarRateUnitPackage>)
            {

                <text>
                if (@carRatesPackages.CarRatePackageId == selectedTour.substring(4, 5))
                {
                if(@(carRatesPackages.CarUnitId) == selectedCar )
                {
                        carRate_longhaulrate = @carRatesPackages.FuelLonghaul;
                        carRate_fuel =  @carRatesPackages.FuelDaily;


                        //fuel
                        if ($('#rsv-fuel').val() == '0') {
                            carRate_longhaulrate = 0;
                        } else {
                        }
                    }
                }
                </text>
            }



            <text>
        if(@package.Id == selectedTour.substring(4, 5)){ // get id of the tour
            $('#smry-itour').text('@package.Description');
            $('#rnt-destination').val('@package.Description'); //for reservation details
            $('#rnt-usedfor').val('@package.Description'); //for reservation details
        }

        //meals and accomodation
        if ($('#rsv-meal').val() == '0') {
            $('#smry-rMeal').text('by renter ');
        } else {

            $('#smry-rMeal').text('Included : ' + @package.DailyMeals +' + ' + @package.DailyRoom);
        }

        //fuel
        if ($('#rsv-fuel').val() == '0') {
            $('#smry-rFuel').text('by renter');
        } else {
            $('#smry-rFuel').text('Included : f:' + carRate_fuel + ' + lh:' + carRate_longhaulrate);
        }
        </text>

            //get car rate
            foreach (var carlist in ViewBag.CarUnitList as IEnumerable<JobsV1.Models.CarUnit>)
            {

                <text>
        if(@carlist.Id == selectedCar){ // get id of the car
            $('#smry-rVehicle').text('@carlist.Description');
            $('#rnt-carUnit').val(selectedCar);  // (id) for reservation details
        }
        </text>
            }

            //rate
        foreach (var rates in ViewBag.CarRates as IEnumerable<JobsV1.Models.CarRate>)
        {

        <text>
        if(@rates.CarUnitId == selectedCar){ // get id of the car
            $('#smry-rVehicleRate').text('@rates.Daily');
        }

        var rentalType;
        if(RentalType == "With Driver" ){
            rentalType = 1;
        }else{
            rentalType = 0
        }

        var days =  $('#rsv-days').val();

        var rate = @rates.Daily * days;

        //Fuel
        var fuelRate = (Fuel * carRate_fuel * days) + carRate_longhaulrate;

        //MealsAcc
        var mealsperDay = @package.DailyMeals +  @package.DailyRoom;
        var mealsRate = (MealsAcc * mealsperDay ) * (days - 1) * rentalType;

        //total rate
        var totalRate =rate + fuelRate + mealsRate;
        $('#rnt-baseRate').val(totalRate);
        if(selectedCar == '@rates.CarUnitId' ){
            $('#smry-rtotal').text('r:' + rate  +' + m:'+ mealsRate +' + f:'+ fuelRate +' = '+  totalRate);
        }
        </text>
             }//end foreach rates

        }//end foreach packages

    }//end foreach function


    function submitRenter(){

        alert('submit');
        data = {
            Id : 0,
            DtTrx : '9/22/2018',
            CarUnitId : '1',
            DtStart : '9/22/2018',
            LocStart : 'somewhere',
            DtEnd : '9/22/2018',
            LocEnd : 'somewhere',
            BaseRate : '2000',
            Destinations : 'Samal Tour',
            UseFor : 'somewhere',
            RenterName : 'somewhere',
            RenterCompany : 'somewhere',
            RenterEmail : 'somewhere@gmail.com',
            RenterMobile : '09123456',
            RenterAddress : '',
            RenterFbAccnt : '',
            RenterLinkedInAccnt : '',
            EstHrPerDay : '',
            EstKmTravel : ''
        }


        var serviceURL = '/CarRental/FormRenterPOST';

        $.ajax({
            type: "POST",
            url: serviceURL,
            data: data,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: successFunc(),
            error: errorFunc()
        });
    }

    function selfDrive(id){
        window.location.href = '/CarRental/Reservation?unitid='+id ;
    }


    $('#pkg-table').on('click', '.clickable-row', function(event) {
        $(this).addClass('active').siblings().removeClass('active');
        selectedTour =  $(this).attr('id');
    });
</script>
